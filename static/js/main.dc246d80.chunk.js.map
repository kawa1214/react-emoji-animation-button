{"version":3,"sources":["../../src/components/counter.js","../../src/components/button.js","../../src/index.js","App.js","index.js"],"names":["Counter","count","className","styles","counterContainer","Button","text","buttonContainer","button","EmojiAnimationButton","complete","initClicked","useState","buttonText","setButtonText","buttonCount","setButtonCount","buttonClicked","setButtonClicked","animationTimeline","setAnimationTimeline","buttonBurst","setButtonBurst","buttonCircleBurst","setButtonCircleBurst","buttonRef","useRef","useEffect","mojs","parent","radius","50","angle","children","shape","6","scale","stroke","strokeWidth","delay","speed","easing","duration","fill","3","el","x","0","container","ref","onClick","App","style","padding","ReactDOM","render","document","getElementById"],"mappings":"8ZAGaA,EAAU,SAAC,GAAc,IAAZC,EAAY,EAAZA,MACxB,OACE,yBAAKC,UAAWC,EAAOC,kBADzB,ICDWC,EAAS,SAAC,GAAa,IAAXC,EAAW,EAAXA,KACvB,OACE,yBAAKJ,UAAWC,EAAOI,iBACrB,uBAAGL,UAAWC,EAAOK,QAFzB,KCGWC,EAAuB,SAAC,GAA2C,IAAzCH,EAAyC,EAAzCA,KAAMI,EAAmC,EAAnCA,SAAUT,EAAyB,EAAzBA,MAAOU,EAAkB,EAAlBA,YAAkB,EAE1CC,mBAF0C,MAEvEC,EAFuE,KAE3DC,EAF2D,OAGxCF,mBAHwC,GAGvEG,EAHuE,KAG1DC,EAH0D,OAIpCJ,mBAJoC,GAIvEK,EAJuE,KAIxDC,EAJwD,OAM5BN,mBAN4B,MAMvEO,EANuE,KAMpDC,EANoD,OAOxCR,mBAPwC,MAOvES,EAPuE,KAO1DC,EAP0D,OAQ5BV,mBAR4B,MAQvEW,EARuE,KAQpDC,EARoD,KAUxEC,EAAYC,mBAElBC,qBAAU,WAENb,EADF,EACEA,EAEAA,KAED,CANHa,IAQAA,qBAAU,WACRL,EACE,IAAIM,IAAJ,MAAe,CACbC,OAAQJ,EADK,QAEbK,OAAQ,CAAEC,GAAI,IACd9B,MAHa,EAIb+B,MAJa,GAKbC,SAAU,CACRC,MADQ,UAERJ,OAAQ,CAAEK,EAAG,GACbC,MAHQ,EAIRC,OAJQ,sBAKRC,YALQ,EAMRN,MANQ,IAORO,MAPQ,GAQRC,MARQ,GASRC,OAAQb,0BATA,GAURc,SAAU,QAKhBlB,EACE,IAAII,IAAJ,MAAe,CACbC,OAAQJ,EADK,QAEbK,OAAQ,CAAEC,GAAI,IACdC,MAHa,GAIbU,SAJa,IAKbT,SAAU,CACRC,MADQ,SAERS,KAFQ,yBAGRJ,MAHQ,GAIRC,MAJQ,GAKRV,OAAQ,CAAEc,EAAG,GACbH,OAAQb,iCAKd,IAAIA,IAAJ,KAAc,CACZiB,GAAIpB,EADQ,QAEZqB,EAAG,CACDC,EAAG,MAIP3B,EAAqB,IAAIQ,IAAzBR,YA9CFO,IAgEA,OACE,yBAAKzB,UAAWC,EAAO6C,WACrB,qBAAS/C,MAAOc,IAChB,yBAAKkC,IAAL,EAAqBC,QAjBT,WACd,EACElC,EAAeD,EAAfC,IAEAA,EAAeD,EAAfC,GACAG,MAAsB,CAAC,EAAvBA,IAIAA,YAEFD,QAOI,qBAAQZ,KAAMO,O,MC7EPsC,MAbH,IAER,yBAAKC,MAAO,CAAEC,QAAS,QACrB,kBAAC,EAAD,CACE/C,KAAK,eACLI,SAAS,eACTT,MAAO,EACPU,aAAa,KCNrB2C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.dc246d80.chunk.js","sourcesContent":["import React from 'react'\nimport styles from '../styles.module.css'\n\nexport const Counter = ({ count }) => {\n  return (\n    <div className={styles.counterContainer}>\n      {count}\n    </div>\n  )\n}","import React from 'react'\nimport styles from '../styles.module.css'\n\nexport const Button = ({ text }) => {\n  return (\n    <div className={styles.buttonContainer}>\n      <a className={styles.button}>{text}</a>\n    </div>\n  )\n}","import React, { useState, useEffect, useRef } from 'react'\nimport styles from './styles.module.css'\nimport mojs from \"@mojs/core\";\n\nimport { Counter } from './components/counter'\nimport { Button } from './components/button'\n\nexport const EmojiAnimationButton = ({ text, complete, count, initClicked }) => {\n\n  const [buttonText, setButtonText] = useState(null)\n  const [buttonCount, setButtonCount] = useState(count)\n  const [buttonClicked, setButtonClicked] = useState(initClicked)\n\n  const [animationTimeline, setAnimationTimeline] = useState(null)\n  const [buttonBurst, setButtonBurst] = useState(null)\n  const [buttonCircleBurst, setButtonCircleBurst] = useState(null)\n\n  const buttonRef = useRef()\n\n  useEffect(() => {\n    if (buttonClicked) {\n      setButtonText(complete)\n    } else {\n      setButtonText(text)\n    }\n  }, [buttonClicked])\n\n  useEffect(() => {\n    setButtonBurst(\n      new mojs.Burst({\n        parent: buttonRef.current,\n        radius: { 50: 95 },\n        count: 5,\n        angle: 30,\n        children: {\n          shape: 'polygon',\n          radius: { 6: 0 },\n          scale: 1,\n          stroke: 'rgba(211,84,0 ,0.5)',\n          strokeWidth: 2,\n          angle: 210,\n          delay: 30,\n          speed: 0.2,\n          easing: mojs.easing.bezier(0.1, 1, 0.3, 1),\n          duration: 300,\n        }\n      })\n    )\n\n    setButtonCircleBurst(\n      new mojs.Burst({\n        parent: buttonRef.current,\n        radius: { 50: 75 },\n        angle: 25,\n        duration: 300,\n        children: {\n          shape: 'circle',\n          fill: 'rgba(149,165,166 ,0.5)',\n          delay: 30,\n          speed: 0.2,\n          radius: { 3: 0 },\n          easing: mojs.easing.bezier(0.1, 1, 0.3, 1),\n        }\n      })\n    )\n\n    new mojs.Html({\n      el: buttonRef.current,\n      x: {\n        0: 50\n      },\n    })\n\n    setAnimationTimeline(new mojs.Timeline())\n  }, [])\n\n\n  const onClick = () => {\n    if (buttonClicked) {\n      setButtonCount(buttonCount - 1)\n    } else {\n      setButtonCount(buttonCount + 1)\n      animationTimeline.add([\n        buttonBurst,\n        buttonCircleBurst,\n      ])\n      animationTimeline.replay()\n    }\n    setButtonClicked(!buttonClicked)\n  }\n\n  return (\n    <div className={styles.container}>\n      <Counter count={buttonCount} />\n      <div ref={buttonRef} onClick={onClick}>\n        <Button text={buttonText} />\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nimport { EmojiAnimationButton } from 'react-emoji-animation-button'\nimport 'react-emoji-animation-button/dist/index.css'\n\nconst App = () => {\n  return (\n    <div style={{ padding: \"3em\" }}>\n      <EmojiAnimationButton\n        text=\"😱\"\n        complete=\"👍\"\n        count={5}\n        initClicked={false}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}